/*
 * Copyright 2019 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

private static String xmlTemplate(Project project) {
  def gocdPlugin = project.gocdPlugin
  return """
    <!--
      ~ Copyright 2018 ThoughtWorks, Inc.
      ~
      ~ Licensed under the Apache License, Version 2.0 (the "License");
      ~ you may not use this file except in compliance with the License.
      ~ You may obtain a copy of the License at
      ~
      ~     http://www.apache.org/licenses/LICENSE-2.0
      ~
      ~ Unless required by applicable law or agreed to in writing, software
      ~ distributed under the License is distributed on an "AS IS" BASIS,
      ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      ~ See the License for the specific language governing permissions and
      ~ limitations under the License.
      -->

    <go-plugin id="${gocdPlugin.id}" version="1">
      <about>
        <name>${gocdPlugin.name}</name>
        <version>${project.version}</version>
        <target-go-version>${gocdPlugin.goCdVersion}</target-go-version>
        <description>${gocdPlugin.description}</description>
        <vendor>
          <name>${gocdPlugin.vendorName}</name>
          <url>${gocdPlugin.vendorUrl}</url>
        </vendor>
      </about>
    </go-plugin>
    """.stripIndent().trim()
}

private static String pluginProperties(Project project) {
  def gocdPlugin = project.gocdPlugin
  return """
    #
    # Copyright 2018 ThoughtWorks, Inc.
    #
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    #

    id=${gocdPlugin.id}
    name=${gocdPlugin.name}
    version=${project.version}
    goCdVersion=${gocdPlugin.goCdVersion}
    description=${gocdPlugin.description}
    vendorName=${gocdPlugin.vendorName}
    vendorUrl=${gocdPlugin.vendorUrl}
  """.stripIndent().trim()
}

project.afterEvaluate {
  project.gocdPlugin.pluginProject.with { Project pluginProject ->
    def generatedResourcesOutput = pluginProject.file("src/main/resources-generated")

    pluginProject.sourceSets {
      main {
        resources {
          output.dir generatedResourcesOutput, builtBy: 'generateResources'
          srcDirs += generatedResourcesOutput
        }
      }


      pluginProject.tasks.create('generateResources') { thisTask ->
        thisTask.outputs.upToDateWhen {false}
        outputs.dir(generatedResourcesOutput)

        doFirst {
          project.delete(generatedResourcesOutput)
          generatedResourcesOutput.mkdirs()

          new File(generatedResourcesOutput, "plugin.xml").setText(xmlTemplate(project), "utf-8")
          new File(generatedResourcesOutput, "plugin.properties").setText(pluginProperties(project), "utf-8")
        }
      }


      test {
        java {
          compileClasspath += configurations.compileOnly
          runtimeClasspath += configurations.compileOnly
        }
      }
    }
  }
}
